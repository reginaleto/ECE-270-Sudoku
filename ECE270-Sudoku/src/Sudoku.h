#pragma once

#define ROWS_MAX 9
#define COLS_MAX 9
#define GRID_MAX 5000

#include <iostream>
#include <string>

#include "ofMain.h"
#include "ofxGui.h"

using namespace std;

class Sudoku : public ofRectangle
{	
public:

	int matrix[ROWS_MAX][COLS_MAX] = {
	{ 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{ 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{ 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{ 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{ 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{ 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{ 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{ 0, 0, 0, 0, 0, 0, 0, 0, 0},
	{ 0, 0, 0, 0, 0, 0, 0, 0, 0} };

	int solution1[ROWS_MAX][COLS_MAX] = {
	{ 5, 1, 3, 7, 6, 2, 8, 9, 4 },
	{ 6, 9, 4, 3, 8, 1, 5, 2, 7 },
	{ 8, 7, 2, 4, 5, 9, 1, 6, 3 },
	{ 9, 2, 6, 1, 4, 5, 7, 3, 8 },
	{ 1, 5, 8, 6, 7, 3, 2, 4, 9 },
	{ 3, 4, 7, 2, 9, 8, 6, 5, 1 },
	{ 2, 8, 1, 9, 3, 6, 4, 7, 5 },
	{ 4, 6, 9, 5, 1, 7, 3, 8, 2 },
	{ 7, 3, 5, 8, 2, 4, 9, 1, 6 } };

	int solution2[ROWS_MAX][COLS_MAX] = {
	{ 1, 2, 3, 6, 7, 8, 9, 4, 5 },
	{ 5, 8, 4, 2, 3, 9, 7, 6, 1 },
	{ 9, 6, 7, 1, 4, 5, 3, 2, 8 },
	{ 3, 7, 2, 4, 6, 1, 5, 8, 9 },
	{ 6, 9, 1, 5, 8, 3, 2, 7, 4 },
	{ 4, 5, 8, 7, 9, 2, 6, 1, 3 },
	{ 8, 3, 6, 9, 2, 4, 1, 5, 7 },
	{ 2, 1, 9, 8, 5, 7, 4, 3, 6 },
	{ 7, 4, 5, 3, 1, 6, 8, 9, 2 } };

	int solution3[ROWS_MAX][COLS_MAX] = {
	{ 5, 3, 4, 6, 7, 8, 9, 1, 2 },
	{ 6, 7, 2, 1, 9, 5, 3, 4, 8 },
	{ 1, 9, 8, 3, 4, 2, 5, 6, 7 },
	{ 8, 5, 9, 7, 6, 1, 4, 2, 3 },
	{ 4, 2, 6, 8, 5, 3, 7, 9, 1 },
	{ 7, 1, 3, 9, 2, 4, 8, 5, 6 },
	{ 9, 6, 1, 5, 3, 7, 2, 8, 4 },
	{ 2, 8, 7, 4, 1, 9, 6, 3, 5 },
	{ 3, 4, 5, 2, 8, 6, 1, 7, 9 } };

	int solution4[ROWS_MAX][COLS_MAX] = {
	{ 8, 2, 7, 1, 5, 4, 3, 9, 6 },
	{ 9, 6, 5, 3, 2, 7, 1, 4, 8 },
	{ 3, 4, 1, 6, 8, 9, 7, 5, 2 },
	{ 5, 9, 3, 4, 6, 8, 2, 7, 1 },
	{ 4, 7, 2, 5, 1, 3, 6, 8, 9 },
	{ 6, 1, 8, 9, 7, 2, 4, 3, 5 },
	{ 7, 8, 6, 2, 3, 5, 9, 1, 4 },
	{ 1, 5, 4, 7, 9, 6, 8, 2, 3 },
	{ 2, 3, 9, 8, 4, 1, 5, 6, 7 } };

	void printMatrix();
	bool checkWin(); // checks rows and columns against solution
};

